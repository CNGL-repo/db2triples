/***************************************************************************
 *
 * R2RML Model : ObjectMap interface
 *
 * (C) 2011 Antidot (http://www.antidot.net)
 *
 * Module			:	R2RMLModel
 * 
 * Fichier			:	IObjectMap.java
 *
 * Description		:	An element of a class which implements this interface
 * 						contains the rules for generating the object 
 * 						component of the (predicate, object) pair
 * 						generated by a PredicateObjectMap.
 * 
 * Reference		:	RDF Vocabulary for R2RML
 * 						R2RML: RDB to RDF Mapping Language
 * 						W3C Working Draft 24 March 2011
 *
 * Options de compilation:
 *
 * Auteurs(s)			:	JHO
 *
 *
 ****************************************************************************/
package antidot.r2rml.model;

import org.openrdf.model.Value;

import antidot.r2rml.exception.InvalidR2RMLSyntaxException;
import antidot.xmls.type.XSDType;

/**
 * @author   jh
 */
public interface IObjectMap {

	/**
	 * This property specifies an RDF term. The specified RDF term is used as object component of the (predicate, object) pair generated by a PredicateObjectMap. The maximum cardinality of this property is one and an ObjectMap must either have this property or the rr:column property, but not both.
	 * @return
	 */
	public Value getObject();

	/**
	 * @param  object
	 */
	public void setObject(Value object);

	/**
	 * This property specifies the name of a column in the logical table. The object component of the (predicate, object) pair generated from a logical table row will use the value from the specified column. The maximum cardinality of this property is one and an ObjectMap must either have this property or the rr:object property, but not both.
	 * @return
	 */
	public String getColumn();

	/**
	 * @param  column
	 */
	public void setColumn(String column);

	/**
	 * This optional property, for use in place of rr:column, specifies a template (or format string) to construct a value, for use as a predicate IRI, based on one or more columns from a logical table row.
	 * @return
	 */
	public String getTemplate();

	/**
	 * @param template
	 * @throws InvalidR2RMLSyntaxException
	 */
	public void setTemplate(String template) throws InvalidR2RMLSyntaxException;

	/**
	 * This optional property specifies the datatype for the object component of the (predicate, object) pair generated by a PredicateObjectMap. It is relevant only if an ObjectMap has a rr:column property or a rr:template property and term type is "Literal". If not specified, the datatype for the object component will be derived as follows: if rr:template is used for obtaining the object value, then the datatype is assumed to be RDF plain literal; for rr:column, the datatype is derived from the column definition of the logical table. Maximum cardinality of this property is 1.
	 * @return
	 */
	public XSDType getDatatype();

	/**
	 * @param  datatype
	 */
	public void setDatatype(XSDType datatype);

	/**
	 * This optional property specifies the language for the object component of the (predicate, object) pair generated by a PredicateObjectMap. This property is applicable only if the datatype of the object value is RDF plain literal and is relevant only if an ObjectMap has a rr:column property or a rr:template property. In the following example, the language tag for the object value component is specified to be US English.
	 * @return
	 */
	public String getLanguage();

	/**
	 * @param  language
	 */
	public void setLanguage(String language);

	/**
	 * This optional property specifies an expression that allows, at query processing time, use of indexes on any (underlying) relational table when accessing based on a value of a column (defined as an expression) in the logical table. The specified expression must be usable in the WHERE clause of a SQL query. Specifically, all the column names must be actual column names in the associated logical table. Case-sensitive column names must be enclosed within curly braces.
	 * @return
	 */
	public String getInverseExpression();

	/**
	 * @param  inverseExpression
	 */
	public void setInverseExpression(String inverseExpression);

	/**
	 * This property specifies an RDF term type. It is relevant in an ObjectMap only if the ObjectMap has a rr:column property or a rr:template property. The generated object component will be of the specified RDF term type. The maximum cardinality of this property is 1. If not specified, the generated object component will be an RDF literal.
	 * @return
	 */
	public TermType getTermType();

	/**
	 * @param  type
	 */
	public void setTermType(TermType type);

}
